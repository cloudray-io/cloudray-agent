// This file is @generated by prost-build.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Error {
    #[prost(enumeration = "ErrorType", tag = "1")]
    pub error_type: i32,
    #[prost(string, tag = "2")]
    pub error_description: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AuthResult {
    #[prost(bool, tag = "1")]
    pub auth_success: bool,
    #[prost(string, tag = "2")]
    pub agent_token: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct RunRunlog {
    #[prost(uint64, tag = "1")]
    pub runlog_id: u64,
    #[prost(string, tag = "2")]
    pub parsed_script: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct O2aMessage {
    #[prost(oneof = "o2a_message::O2aPayload", tags = "100, 101, 201")]
    pub o2a_payload: ::core::option::Option<o2a_message::O2aPayload>,
}
/// Nested message and enum types in `O2aMessage`.
pub mod o2a_message {
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum O2aPayload {
        #[prost(message, tag = "100")]
        Error(super::Error),
        #[prost(message, tag = "101")]
        AuthResult(super::AuthResult),
        #[prost(message, tag = "201")]
        RunRunlog(super::RunRunlog),
    }
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct O2aRoot {
    #[prost(message, repeated, tag = "11")]
    pub o2a_messages: ::prost::alloc::vec::Vec<O2aMessage>,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum ErrorType {
    ErrorUnknown = 0,
    ErrorInternalServer = 1,
    ErrorProtobufParse = 2,
    ErrorMessageNotAllowedInHandshake = 4,
    ErrorAgentTokenInvalid = 11,
    ErrorAgentTokenExpired = 12,
}
impl ErrorType {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::ErrorUnknown => "ERROR_UNKNOWN",
            Self::ErrorInternalServer => "ERROR_INTERNAL_SERVER",
            Self::ErrorProtobufParse => "ERROR_PROTOBUF_PARSE",
            Self::ErrorMessageNotAllowedInHandshake => {
                "ERROR_MESSAGE_NOT_ALLOWED_IN_HANDSHAKE"
            }
            Self::ErrorAgentTokenInvalid => "ERROR_AGENT_TOKEN_INVALID",
            Self::ErrorAgentTokenExpired => "ERROR_AGENT_TOKEN_EXPIRED",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "ERROR_UNKNOWN" => Some(Self::ErrorUnknown),
            "ERROR_INTERNAL_SERVER" => Some(Self::ErrorInternalServer),
            "ERROR_PROTOBUF_PARSE" => Some(Self::ErrorProtobufParse),
            "ERROR_MESSAGE_NOT_ALLOWED_IN_HANDSHAKE" => {
                Some(Self::ErrorMessageNotAllowedInHandshake)
            }
            "ERROR_AGENT_TOKEN_INVALID" => Some(Self::ErrorAgentTokenInvalid),
            "ERROR_AGENT_TOKEN_EXPIRED" => Some(Self::ErrorAgentTokenExpired),
            _ => None,
        }
    }
}
