name: Release-plz Release w/ Binaries

permissions:
  pull-requests: write
  contents: write

on:
  push:
    branches:
      - main

jobs:
  release-plz-release:
    name: Release-plz release
    runs-on: ubuntu-24.04

    outputs:
      releases: ${{ steps.release-plz.outputs.releases }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Run release-plz
        id: release-plz
        uses: release-plz/action@v0.5
        with:
          command: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  upload-binaries:
    needs: release-plz-release
    if: needs.release-plz-release.outputs.releases != '[]'
    name: ${{ matrix.target.name }} / ${{ matrix.release.tag }} / ${{ matrix.target.os }}
    strategy:
      fail-fast: false # Don't cancel all jobs if one fails
      matrix:
        release: ${{ fromJSON(needs.release-plz-release.outputs.releases) }}
        target:
          - name: x86_64-unknown-linux-musl
            os: ubuntu-24.04
          - name: aarch64-unknown-linux-musl
            os: ubuntu-24.04
          - name: x86_64-apple-darwin
            os: macos-13
          - name: aarch64-apple-darwin
            os: macos-15
          - name: x86_64-pc-windows-msvc
            os: windows-2025
          - name: aarch64-pc-windows-msvc
            os: windows-11-arm

    runs-on: ${{ matrix.target.os }}

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target.name }}

      - name: Debug environment
        run: |
          echo "Package name: ${{ matrix.release.package_name }}"
          echo "Version:      ${{ matrix.release.version }}"
          echo "Tag:          ${{ matrix.release.tag }}"
          echo "Ref:          ${{ env.GITHUB_REF }}"
          echo "Target:       ${{ matrix.target.name }}"
          echo "OS:           ${{ matrix.target.os }}"

      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: ${{ matrix.release.package_name }}
          target: ${{ matrix.target.name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: refs/tags/${{ matrix.release.tag }}
